{"version":3,"sources":["Context.js","components/Contact.js","containers/Contacts.js","components/Header.js","containers/AddContact.js","components/About.js","components/404.js","containers/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","toConsumableArray","concat","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContact","e","onDeleteClick","delete","setTimeout","_this2","_this$props$contact","name","email","phone","className","style","headingStyle","onClick","floatedRightStyle","Link","to","marginRight","float","color","cursor","Contacts","Fragment","components_Contact","Header","href","branding","AddContact","error","nameError","emailError","phoneError","handleChange","event","_this$setState","target","defineProperty","handleSubmit","_this$state","preventDefault","console","log","abrupt","post","history","push","_this$state2","onSubmit","bind","htmlFor","onChange","placeholder","errorMsg","About","match","params","toUpperCase","NotFound","EditContact","put","App","Context_Provider","components_Header","BrowserRouter","Switch","Route","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4TAEMA,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACpB,OAAOA,EAAOC,MAEV,IAAK,iBACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKH,EAAZ,CAAmBK,SAAUL,EAAMK,SAASC,OAAO,SAAAC,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,YACxF,IAAK,cACD,OAAON,OAAAC,EAAA,EAAAD,CAAA,GAAIH,EAAX,CAAkBK,SAASF,OAAAO,EAAA,EAAAP,CAAKH,EAAMK,UAAZM,OAAA,CAAsBV,EAAOQ,YAC3D,IAAK,eACD,OAAON,OAAAC,EAAA,EAAAD,CAAA,GAAIH,EAAX,CAAkBK,SAAUL,EAAMK,SAASO,IAAI,SAAAL,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,QAAQD,GAAMD,EAAUN,EAAOQ,QAAWF,MAC9H,QACI,OAAOP,IAINa,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAb,OAAAsB,EAAA,EAAAtB,CAAAe,MAAAH,EAAAZ,OAAAuB,EAAA,EAAAvB,CAAAU,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAP,OAAAW,MACItB,MAAQ,CACJK,SAAU,GACVwB,SAAU,SAAA5B,GACNe,EAAKc,SAAS,SAAA9B,GAAK,OAAID,EAAQC,EAAOC,OAJlDe,EAAA,OAAAb,OAAA4B,EAAA,EAAA5B,CAAAU,EAAAC,GAAAX,OAAA6B,EAAA,EAAA7B,CAAAU,EAAA,EAAAoB,IAAA,oBAAAC,MAAA,eAAAC,EAAAhC,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAAC,EAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAayBC,IAAMC,IAAI,6CAbnC,OAaaN,EAbbE,EAAAK,KAcO9B,KAAKY,SAAS,CAACzB,SAAUoC,EAAIQ,OAdpC,wBAAAN,EAAAO,SAAAV,EAAAtB,SAAA,yBAAAiB,EAAAP,MAAAV,KAAAE,YAAA,KAAAa,IAAA,SAAAC,MAAA,WAmBQ,OACIiB,EAAAb,EAAAc,cAACxD,EAAQiB,SAAT,CAAkBqB,MAAOhB,KAAKlB,OACzBkB,KAAKmC,MAAMC,cArB5BzC,EAAA,CAA8B0C,aA0BjBC,EAAW5D,EAAQ4D,iBCpC1BC,6MACJzD,MAAQ,CACN0D,aAAa,KAEfA,YAAc,SAACC,GAAD,OAAO3C,EAAKc,SAAS,CAAE4B,aAAc1C,EAAKhB,MAAM0D,iBAE9DE,oDAAgB,SAAApB,EAAOhC,EAAIqB,GAAX,OAAAQ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACIC,IAAMe,OAAN,6CAAAlD,OAA0DH,IAD9D,OAAAmC,EAAAK,KAEdc,WAAWjC,EAAS,CAClB3B,KAAM,iBACNO,QAASD,IAAM,KAJH,wBAAAmC,EAAAO,SAAAV,EAAAtB,yIAQP,IAAA6C,EAAA7C,KAAA8C,EAC8B9C,KAAKmC,MAAM9C,QAArCC,EADJwD,EACIxD,GAAIyD,EADRD,EACQC,KAAMC,EADdF,EACcE,MAAOC,EADrBH,EACqBG,MAC5B,OACEhB,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,uBACbjB,EAAAb,EAAAc,cAAA,MAAIiB,MAAOC,GACPL,EADJ,IACY,IADZ,IACiBd,EAAAb,EAAAc,cAAA,KAAGmB,QAASR,EAAKL,YAAaU,UAAU,oBAEzDjB,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,cAAcC,MAAQG,EAAqBD,QAAU,kBAAMR,EAAKH,cAAcpD,EAAGqB,MAC9FsB,EAAAb,EAAAc,cAACqB,EAAA,EAAD,CAAMC,GAAE,iBAAA/D,OAAmBH,GAAM6D,MAAO,CAAEM,YAAa,SACnDxB,EAAAb,EAAAc,cAAA,KAAGiB,MAAO,CAAEO,MAAO,QAAQC,MAAM,SAAWT,UAAU,mBAGxDL,EAAK/D,MAAM0D,aAAeP,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,cACtCjB,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,mBAAd,UAAyCF,GACzCf,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,mBAAd,UAAyCD,cAhCrCZ,aA8ChBe,EAAe,CACnBQ,OAAQ,WAGJN,EAAoB,CACxBI,MAAO,QACPC,MAAO,MACPC,OAAQ,WAGKrB,IC1CAsB,mLAhBX,OACI5B,EAAAb,EAAAc,cAACI,EAAD,KACK,SAAAtB,GACG,OACIiB,EAAAb,EAAAc,cAACD,EAAAb,EAAM0C,SAAP,KACM9C,EAAM7B,SAASO,IAAI,SAAAL,GAAO,OACxB4C,EAAAb,EAAAc,cAAC6B,EAAD,CAAShD,IAAK1B,EAAQC,GAAID,QAASA,gBATxCgD,aC6BR2B,EA5BA,SAAC7B,GACZ,OACIF,EAAAb,EAAAc,cAAA,WACID,EAAAb,EAAAc,cAAA,OAAKgB,UAAW,uDACZjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACXjB,EAAAb,EAAAc,cAAA,KAAG+B,KAAK,IAAIf,UAAU,gBAAiBf,EAAM+B,UAE7CjC,EAAAb,EAAAc,cAAA,WACID,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,sBACVjB,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,YACVjB,EAAAb,EAAAc,cAAA,KAAG+B,KAAK,eAAef,UAAU,YAC7BjB,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,oBADjB,sCCR1BiB,oNACFrF,MAAQ,CACJiE,KAAM,GACNC,MAAO,GACPC,MAAO,GACPmB,MAAO,CAACC,UAAW,GAAIC,WAAW,GAAGC,WAAW,OAGpDC,aAAe,SAACC,GAAU,IAAAC,EAChB3B,EAAO0B,EAAME,OAAO5B,KACpB/B,EAAQyD,EAAME,OAAO3D,MAC3BlB,EAAKc,UAAL8D,EAAA,GAAAzF,OAAA2F,EAAA,EAAA3F,CAAAyF,EAAgB3B,EAAO,CAAC/B,IAAxB/B,OAAA2F,EAAA,EAAA3F,CAAAyF,EAAA,QACY,CAACL,UAAW,GAAIC,WAAW,GAAGC,WAAW,KADrDG,OAIJG,mDAAe,SAAAvD,EAAOX,EAAU8B,GAAjB,IAAAqC,EAAA/B,EAAAC,EAAAC,EAAAmB,EAAA/E,EAAAkC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACXc,EAAEsC,iBACFC,QAAQC,IAAItE,EAAS8B,GAFVqC,EAG2BhF,EAAKhB,MAAnCiE,EAHG+B,EAGH/B,KAAMC,EAHH8B,EAGG9B,MAAOC,EAHV6B,EAGU7B,MAAQmB,EAHlBU,EAGkBV,MAExBrB,EALM,CAAAtB,EAAAE,KAAA,cAOW,8BAClB7B,EAAKc,SAAS,CAACwD,MAAO,CAACC,UADL,iCAPX5C,EAAAyD,OAAA,oBAWNlC,EAXM,CAAAvB,EAAAE,KAAA,eAaY,+BACpB7B,EAAKc,SAAS,CAACwD,MAAO,CAACE,WADH,kCAbZ7C,EAAAyD,OAAA,qBAiBNjC,EAjBM,CAAAxB,EAAAE,KAAA,eAkBY,sCACnB7B,EAAKc,SAAS,CAACwD,MAAO,CAACG,WADJ,yCAlBZ9C,EAAAyD,OAAA,qBAyBLd,EAAME,YAAeF,EAAMC,WAAcD,EAAMG,WAzB1C,CAAA9C,EAAAE,KAAA,gBA2BDtC,EAAU,CAEZ0D,OACAC,QACAC,SA/BGxB,EAAAE,KAAA,GAiCWC,IAAMuD,KAAK,4CAA4C9F,GAjClE,QAiCDkC,EAjCCE,EAAAK,KAkCPnB,EAAS,CACL3B,KAAM,cACNO,QAASgC,EAAIQ,OAGjBjC,EAAKc,SAAS,CACVmC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPmB,MAAO,KAEXtE,EAAKqC,MAAMiD,QAAQC,KAAK,KA7CjB,yBAAA5D,EAAAO,SAAAV,EAAAtB,yIAkDR,IAAA6C,EAAA7C,KAAAsF,EACiCtF,KAAKlB,MAAnCiE,EADHuC,EACGvC,KAAMC,EADTsC,EACStC,MAAOC,EADhBqC,EACgBrC,MAAOmB,EADvBkB,EACuBlB,MAC9B,OACInC,EAAAb,EAAAc,cAACI,EAAD,KACK,SAAAtB,GACG,OACIiB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACXjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,eAAf,eAGAjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACXjB,EAAAb,EAAAc,cAAA,QAAMqD,SAAU1C,EAAKgC,aAAaW,KAAK3C,EAAK7B,EAAML,WAC9CsB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,cACXjB,EAAAb,EAAAc,cAAA,SAAOuD,QAAQ,QAAf,QACAxD,EAAAb,EAAAc,cAAA,SAAOlD,KAAK,OAAO+D,KAAK,OAAOG,UAAU,0BAA0BwC,SAAU7C,EAAK2B,aAAcmB,YAAY,kBAAkB3E,MAAO+B,IACnIqB,EAAMC,WAAapC,EAAAb,EAAAc,cAAA,QAAMiB,MAAOyC,GAAb,IAA0BxB,EAAMC,UAAhC,MAEzBpC,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,cACXjB,EAAAb,EAAAc,cAAA,SAAOuD,QAAQ,SAAf,SACAxD,EAAAb,EAAAc,cAAA,SAAOlD,KAAK,QAAQ+D,KAAK,QAAQG,UAAU,0BAA0BwC,SAAU7C,EAAK2B,aAAcmB,YAAY,mBAAmB3E,MAAOgC,IACtIoB,EAAME,YAAcrC,EAAAb,EAAAc,cAAA,QAAMiB,MAAOyC,GAAb,IAA0BxB,EAAME,WAAhC,MAE1BrC,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,cACXjB,EAAAb,EAAAc,cAAA,SAAOuD,QAAQ,QAAf,SACAxD,EAAAb,EAAAc,cAAA,SAAOlD,KAAK,MAAM+D,KAAK,QAAQG,UAAU,0BAA0BwC,SAAU7C,EAAK2B,aAAcmB,YAAY,0BAA0B3E,MAAOiC,IAC3ImB,EAAMG,YAActC,EAAAb,EAAAc,cAAA,QAAMiB,MAAOyC,GAAb,IAA0BxB,EAAMG,WAAhC,MAE1BtC,EAAAb,EAAAc,cAAA,WACID,EAAAb,EAAAc,cAAA,SAAOlD,KAAK,SAASkE,UAAU,4BAA4BlC,MAAM,6BA7F5EqB,cAyGnBuD,EAAW,CACbjC,MAAO,OAEIQ,ICxGA0B,EARD,SAAA1D,GACZ,OACEF,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,kBAAkBf,EAAM2D,MAAMC,OAAOhD,KAAKiD,eACxD/D,EAAAb,EAAAc,cAAA,yCCIS+D,EARE,SAAC9D,GAChB,OACEF,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,aAAd,mBACAjB,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,QAAb,yDCAAgD,6MACFpH,MAAQ,CACJiE,KAAM,GACNC,MAAO,GACPC,MAAO,GACPmB,MAAO,CAACC,UAAW,GAAIC,WAAW,GAAGC,WAAW,OAapDC,aAAe,SAACC,GAAU,IAAAC,EAChB3B,EAAO0B,EAAME,OAAO5B,KACpB/B,EAAQyD,EAAME,OAAO3D,MAC3BlB,EAAKc,UAAL8D,EAAA,GAAAzF,OAAA2F,EAAA,EAAA3F,CAAAyF,EAAgB3B,EAAO,CAAC/B,IAAxB/B,OAAA2F,EAAA,EAAA3F,CAAAyF,EAAA,QACY,CAACL,UAAW,GAAIC,WAAW,GAAGC,WAAW,KADrDG,OAIJG,mDAAe,SAAAvD,EAAOX,EAAU8B,GAAjB,IAAAnD,EAAAwF,EAAA/B,EAAAC,EAAAC,EAAAmB,EAAA/E,EAAAkC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACXc,EAAEsC,iBACIzF,EAAKQ,EAAKqC,MAAM2D,MAAMC,OAAOzG,GACnC0F,QAAQC,IAAItE,EAAS8B,GAHVqC,EAI2BhF,EAAKhB,MAAnCiE,EAJG+B,EAIH/B,KAAMC,EAJH8B,EAIG9B,MAAOC,EAJV6B,EAIU7B,MAAQmB,EAJlBU,EAIkBV,MAExBrB,EANM,CAAAtB,EAAAE,KAAA,cAQW,8BAClB7B,EAAKc,SAAS,CAACwD,MAAO,CAACC,UADL,iCARX5C,EAAAyD,OAAA,oBAYNlC,EAZM,CAAAvB,EAAAE,KAAA,eAcY,+BACpB7B,EAAKc,SAAS,CAACwD,MAAO,CAACE,WADH,kCAdZ7C,EAAAyD,OAAA,qBAkBNjC,EAlBM,CAAAxB,EAAAE,KAAA,eAmBY,sCACnB7B,EAAKc,SAAS,CAACwD,MAAO,CAACG,WADJ,yCAnBZ9C,EAAAyD,OAAA,qBA0BLd,EAAME,YAAeF,EAAMC,WAAcD,EAAMG,WA1B1C,CAAA9C,EAAAE,KAAA,gBA4BDtC,EAAU,CAEZ0D,OACAC,QACAC,SAhCGxB,EAAAE,KAAA,GAkCWC,IAAMuE,IAAN,6CAAA1G,OAAuDH,GAAKD,GAlCvE,QAkCDkC,EAlCCE,EAAAK,KAmCPnB,EAAS,CACL3B,KAAM,eACNO,QAASgC,EAAIQ,OAGjBjC,EAAKc,SAAS,CACVmC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPmB,MAAO,KAEXtE,EAAKqC,MAAMiD,QAAQC,KAAK,KA9CjB,yBAAA5D,EAAAO,SAAAV,EAAAtB,8QAjBLV,EAAKU,KAAKmC,MAAM2D,MAAMC,OAAOzG,YACjBsC,IAAMC,IAAN,6CAAApC,OAAuDH,WAApEiC,SACAlC,EAAUkC,EAAIQ,KACpB/B,KAAKY,SAAS,CACbmC,KAAM1D,EAAQ0D,KACdC,MAAO3D,EAAQ2D,MACfC,MAAO5D,EAAQ4D,2IA8DZ,IAAAJ,EAAA7C,KAAAsF,EACiCtF,KAAKlB,MAAnCiE,EADHuC,EACGvC,KAAMC,EADTsC,EACStC,MAAOC,EADhBqC,EACgBrC,MAAOmB,EADvBkB,EACuBlB,MAC9B,OACInC,EAAAb,EAAAc,cAACI,EAAD,KACK,SAAAtB,GACG,OACIiB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACXjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,eAAf,gBAGAjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACXjB,EAAAb,EAAAc,cAAA,QAAMqD,SAAU1C,EAAKgC,aAAaW,KAAK3C,EAAK7B,EAAML,WAC9CsB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,cACXjB,EAAAb,EAAAc,cAAA,SAAOuD,QAAQ,QAAf,QACAxD,EAAAb,EAAAc,cAAA,SAAOlD,KAAK,OAAO+D,KAAK,OAAOG,UAAU,0BAA0BwC,SAAU7C,EAAK2B,aAAcmB,YAAY,kBAAkB3E,MAAO+B,IACnIqB,EAAMC,WAAapC,EAAAb,EAAAc,cAAA,QAAMiB,MAAOyC,GAAb,IAA0BxB,EAAMC,UAAhC,MAEzBpC,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,cACXjB,EAAAb,EAAAc,cAAA,SAAOuD,QAAQ,SAAf,SACAxD,EAAAb,EAAAc,cAAA,SAAOlD,KAAK,QAAQ+D,KAAK,QAAQG,UAAU,0BAA0BwC,SAAU7C,EAAK2B,aAAcmB,YAAY,mBAAmB3E,MAAOgC,IACtIoB,EAAME,YAAcrC,EAAAb,EAAAc,cAAA,QAAMiB,MAAOyC,GAAb,IAA0BxB,EAAME,WAAhC,MAE1BrC,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,cACXjB,EAAAb,EAAAc,cAAA,SAAOuD,QAAQ,QAAf,SACAxD,EAAAb,EAAAc,cAAA,SAAOlD,KAAK,MAAM+D,KAAK,QAAQG,UAAU,0BAA0BwC,SAAU7C,EAAK2B,aAAcmB,YAAY,0BAA0B3E,MAAOiC,IAC3ImB,EAAMG,YAActC,EAAAb,EAAAc,cAAA,QAAMiB,MAAOyC,GAAb,IAA0BxB,EAAMG,WAAhC,MAE1BtC,EAAAb,EAAAc,cAAA,WACID,EAAAb,EAAAc,cAAA,SAAOlD,KAAK,SAASkE,UAAU,4BAA4BlC,MAAM,gCAxG3EqB,aAoHpBuD,EAAW,CACbjC,MAAO,OAEIuC,IC3FAE,mLArBX,OACEnE,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,OACfjB,EAAAb,EAAAc,cAACmE,EAAD,KACEpE,EAAAb,EAAAc,cAACoE,EAAD,CAAQpC,SAAS,oBACjBjC,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACbjB,EAAAb,EAAAc,cAACqE,EAAA,EAAD,KACEtE,EAAAb,EAAAc,cAACsE,EAAA,EAAD,KACEvE,EAAAb,EAAAc,cAACuE,EAAA,EAAD,CAAOC,KAAK,eAAeC,OAAK,EAACC,UAAWzC,IAC5ClC,EAAAb,EAAAc,cAACuE,EAAA,EAAD,CAAOC,KAAK,eAAeC,OAAK,EAACC,UAAWf,IAC5C5D,EAAAb,EAAAc,cAACuE,EAAA,EAAD,CAAOC,KAAK,oBAAoBC,OAAK,EAACC,UAAWV,IACjDjE,EAAAb,EAAAc,cAACuE,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW/C,IACjC5B,EAAAb,EAAAc,cAACuE,EAAA,EAAD,CAAOG,UAAWX,gBAbd5D,aCCEwE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASlB,MACvB,2DCbNmB,IAASC,OAAOjF,EAAAb,EAAAc,cAACiF,EAAD,MAASC,SAASC,eAAe,SDwH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.1cfac1ac.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type)\r\n    {\r\n        case 'DELETE_CONTACT': \r\n            return { ...state, contacts: state.contacts.filter(contact => contact.id !== action.payload)};\r\n        case 'ADD_CONTACT':\r\n            return {...state, contacts: [...state.contacts, action.payload]};\r\n        case 'EDIT_CONTACT':\r\n            return {...state, contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => {\r\n            this.setState(state => reducer(state, action));\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        // using fetch api\r\n        /* fetch(\"http://jsonplaceholder.typicode.com/users\")\r\n        .then(res => res.json())\r\n        .then(data => this.setState({ contacts: data})) */\r\n        //Using axios\r\n       const res = await axios.get(\"http://jsonplaceholder.typicode.com/users\");\r\n       this.setState({contacts: res.data})\r\n          \r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { Consumer } from '../Context';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContact: false\r\n  }\r\n  showContact = (e) => this.setState({ showContact: !this.state.showContact });\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    const res = await axios.delete(`http://jsonplaceholder.typicode.com/users/${id}`);\r\n    setTimeout(dispatch({\r\n      type: 'DELETE_CONTACT',\r\n      payload: id}), 300);\r\n  } \r\n  \r\n\r\n  render() {\r\n      const {  id, name, email, phone} = this.props.contact;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h3 style={headingStyle}>\r\n                { name } {' '} <i onClick={this.showContact} className=\"fa fa-sort-down\"/>\r\n                \r\n              <i className=\"fa fa-trash\" style={ floatedRightStyle }  onClick={ () => this.onDeleteClick(id,dispatch) }></i>\r\n              <Link to={`/contact/edit/${id}`} style={{ marginRight: '2rem'}}>\r\n                  <i style={{ float: 'right',color:'green' }} className=\"fa fa-pencil\"></i>\r\n              </Link>\r\n              </h3>\r\n              { this.state.showContact && <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: { email }</li>\r\n                  <li className=\"list-group-item\">Phone: { phone }</li>\r\n                </ul> }\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n}\r\nconst headingStyle = {\r\n  cursor: 'pointer'\r\n}\r\n\r\nconst floatedRightStyle = {\r\n  float: 'right',\r\n  color: 'red', \r\n  cursor: 'pointer'\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react'\r\nimport Contact from '../components/Contact';\r\nimport { Consumer } from '../Context';\r\nclass Contacts extends Component {\r\n  render() {\r\n    \r\n    return (\r\n        <Consumer>\r\n            {value => {\r\n                return (\r\n                    <React.Fragment>\r\n                        { value.contacts.map(contact => (\r\n                            <Contact key={contact.id} contact={contact} />\r\n                        ))}\r\n                    </React.Fragment>\r\n                )\r\n            }}\r\n        </Consumer>\r\n      \r\n    )\r\n  }\r\n}\r\nexport default Contacts;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div>\r\n            <nav className =\"navbar navbar-expand-sm navbar-dark bg-primary mb-3\">\r\n                <div className=\"container\">\r\n                    <a href=\"/\" className=\"navbar-brand\">{ props.branding }</a>\r\n                \r\n                    <div>\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <a href=\"/contact/add\" className=\"nav-link\">\r\n                                    <i className=\"fa fa-plus px-1\"></i>\r\n                                    Add Contact\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n}\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Consumer } from '../Context';\r\nimport axios from 'axios'; \r\n//import uuid from 'uuid';\r\nimport './addform.css';\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        error: {nameError: '', emailError:'',phoneError:''}\r\n        }\r\n    \r\n    handleChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({[name]: [value],  \r\n            error : {nameError: '', emailError:'',phoneError:''}\r\n        });\r\n    }\r\n    handleSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        console.log(dispatch,e);\r\n        const { name, email, phone , error} = this.state;\r\n\r\n        if (!name)\r\n        {\r\n            const nameError = 'Name field can not be empty';\r\n            this.setState({error: {nameError} });\r\n            return;\r\n        }\r\n        if (!email)\r\n        {\r\n            const emailError = 'Email field can not be empty';\r\n           this.setState({error: {emailError} });\r\n           return;\r\n        }\r\n        if (!phone) {\r\n            const phoneError = 'Phone Number field can not be empty';\r\n            this.setState({error: {phoneError} });\r\n            return;\r\n           \r\n        }\r\n       \r\n      \r\n         if (!error.emailError || !error.nameError || !error.phoneError)\r\n         {\r\n            const contact = {\r\n                //id : uuid(),\r\n                name,\r\n                email,\r\n                phone\r\n            };\r\n            const res = await axios.post(\"http://jsonplaceholder.typicode.com/users\",contact);\r\n            dispatch({\r\n                type: 'ADD_CONTACT',\r\n                payload: res.data\r\n            })\r\n           \r\n            this.setState({\r\n                name: '',\r\n                email: '',\r\n                phone: '',\r\n                error: {}\r\n            });\r\n            this.props.history.push('/');\r\n    \r\n         }   \r\n            \r\n    }\r\n  render() {\r\n      const { name, email, phone, error } = this.state;\r\n    return (\r\n        <Consumer>\r\n            {value => {\r\n                return (\r\n                    <div className=\"card mb-3\">\r\n                        <div className=\"card-header\">\r\n                            Add Contact\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.handleSubmit.bind(this,value.dispatch)}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name\">Name</label>\r\n                                    <input type=\"text\" name=\"name\" className=\"form-control text-input\" onChange={this.handleChange} placeholder=\"Name of Contact\" value={name} />\r\n                                    { error.nameError && <span style={errorMsg}> { error.nameError } </span> }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                    <input type=\"email\" name=\"email\" className=\"form-control text-input\" onChange={this.handleChange} placeholder=\"Email of Contact\" value={email} />\r\n                                    { error.emailError && <span style={errorMsg}> { error.emailError } </span> }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name\">Phone</label>\r\n                                    <input type=\"tel\" name=\"phone\" className=\"form-control text-input\" onChange={this.handleChange} placeholder=\"Phone Number of Contact\" value={phone} />\r\n                                    { error.phoneError && <span style={errorMsg}> { error.phoneError } </span> }\r\n                                </div>\r\n                                <div>\r\n                                    <input type=\"submit\" className=\"btn btn-block btn-primary\" value=\"Add Contact\" />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }}\r\n        </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nconst errorMsg = {\r\n    color: 'red'\r\n}\r\nexport default AddContact;","import React from 'react'\r\n\r\nconst About = props => {\r\n  return (\r\n    <div>\r\n      <h2 className=\"display-4 mb-3\">{props.match.params.name.toUpperCase()}</h2>\r\n      <p>Simple page about contacts</p>\r\n    </div>\r\n  )\r\n}\r\nexport default About;\r\n","import React from 'react'\r\n\r\nconst NotFound = (props) => {\r\n  return (\r\n    <div>\r\n      <h3 className=\"display-4\">Oops! Error 404</h3>\r\n      <p className=\"lead\">Sorry, the page you were looking for does not exist</p>\r\n    </div>\r\n  )\r\n}\r\nexport default NotFound;","import React, { Component } from 'react';\r\nimport { Consumer } from '../Context';\r\nimport axios from 'axios'; \r\n//import uuid from 'uuid';\r\nimport './addform.css';\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        error: {nameError: '', emailError:'',phoneError:''}\r\n        }\r\n    async componentWillMount() {\r\n        const id = this.props.match.params.id;\r\n       const res =  await axios.get(`http://jsonplaceholder.typicode.com/users/${id}`);\r\n       const contact = res.data;\r\n       this.setState({\r\n        name: contact.name,\r\n        email: contact.email,\r\n        phone: contact.phone\r\n       })\r\n            \r\n    }\r\n    handleChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({[name]: [value],  \r\n            error : {nameError: '', emailError:'',phoneError:''}\r\n        });\r\n    }\r\n    handleSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const id = this.props.match.params.id;\r\n        console.log(dispatch,e);\r\n        const { name, email, phone , error} = this.state;\r\n\r\n        if (!name)\r\n        {\r\n            const nameError = 'Name field can not be empty';\r\n            this.setState({error: {nameError} });\r\n            return;\r\n        }\r\n        if (!email)\r\n        {\r\n            const emailError = 'Email field can not be empty';\r\n           this.setState({error: {emailError} });\r\n           return;\r\n        }\r\n        if (!phone) {\r\n            const phoneError = 'Phone Number field can not be empty';\r\n            this.setState({error: {phoneError} });\r\n            return;\r\n           \r\n        }\r\n       \r\n      \r\n         if (!error.emailError || !error.nameError || !error.phoneError)\r\n         {\r\n            const contact = {\r\n                //id : uuid(),\r\n                name,\r\n                email,\r\n                phone\r\n            };\r\n            const res = await axios.put(`http://jsonplaceholder.typicode.com/users/${id}`,contact);\r\n            dispatch({\r\n                type: 'EDIT_CONTACT',\r\n                payload: res.data\r\n            })\r\n           \r\n            this.setState({\r\n                name: '',\r\n                email: '',\r\n                phone: '',\r\n                error: {}\r\n            });\r\n            this.props.history.push('/');\r\n    \r\n         }   \r\n            \r\n    }\r\n  render() {\r\n      const { name, email, phone, error } = this.state;\r\n    return (\r\n        <Consumer>\r\n            {value => {\r\n                return (\r\n                    <div className=\"card mb-3\">\r\n                        <div className=\"card-header\">\r\n                            Edit Contact\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.handleSubmit.bind(this,value.dispatch)}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name\">Name</label>\r\n                                    <input type=\"text\" name=\"name\" className=\"form-control text-input\" onChange={this.handleChange} placeholder=\"Name of Contact\" value={name} />\r\n                                    { error.nameError && <span style={errorMsg}> { error.nameError } </span> }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                    <input type=\"email\" name=\"email\" className=\"form-control text-input\" onChange={this.handleChange} placeholder=\"Email of Contact\" value={email} />\r\n                                    { error.emailError && <span style={errorMsg}> { error.emailError } </span> }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name\">Phone</label>\r\n                                    <input type=\"tel\" name=\"phone\" className=\"form-control text-input\" onChange={this.handleChange} placeholder=\"Phone Number of Contact\" value={phone} />\r\n                                    { error.phoneError && <span style={errorMsg}> { error.phoneError } </span> }\r\n                                </div>\r\n                                <div>\r\n                                    <input type=\"submit\" className=\"btn btn-block btn-primary\" value=\"Update Contact\" />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }}\r\n        </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nconst errorMsg = {\r\n    color: 'red'\r\n}\r\nexport default EditContact;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Contacts from './containers/Contacts';\nimport Header from './components/Header';\nimport { Provider } from './Context';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AddContact from './containers/AddContact';\nimport About from './components/About';\nimport NotFound from './components/404';\nimport EditContact from './containers/EditContact';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      <Provider>\n        <Header branding=\"Contact Manager\" />\n        <div className=\"container\">\n          <Router>\n            <Switch>\n              <Route path='/contact/add' exact component={AddContact}></Route>\n              <Route path='/about/:name' exact component={About}></Route>\n              <Route path='/contact/edit/:id' exact component={EditContact}></Route>\n              <Route path='/' exact component={Contacts}></Route>\n              <Route component={NotFound}></Route>\n            </Switch>\n          </Router>\n        </div>\n        </Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}